apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

android {
    compileSdk 33
    buildToolsVersion "33.0.2"

    // Load keystore
    def keystorePropertiesFile = rootProject.file("keystore.properties");
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    defaultConfig {
        applicationId "com.kiss.alarm"
        minSdk 16
        targetSdk 33
        versionName '1.1.6'
        versionCode 116
        multiDexEnabled true // Enabling multiDex support.

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            debuggable true
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    namespace 'io.github.carlorodriguez.alarmon'

}

dependencies {
    implementation project(':library')

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.multidex:multidex:2.0.1' // multiDex support for min SdkVersion above 20
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'fr.baloomba:viewpagerindicator:2.4.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.github.iammert:MaterialIntroView:1.5.2'
    // No need for image and gallery dependencies, whe are using intents now to call the default camera and gallery
    //implementation 'com.yanzhenjie:album:2.0.2'
    //implementation 'com.zhihu.android:matisse:0.5.3-beta3' // matisse for gallery and camera.
    //implementation 'com.github.bumptech.glide:glide:4.11.0' // Glide for loading images thumbnails in matisse
    // for dialog
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    implementation 'com.github.adrielcafe:AndroidAudioRecorder:0.3.0'
    // Image Cropper
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.0'  // to crop images
    // face detector
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    // Import the BoM for the Firebase platform. BoM will make all Firebase dependencies compatible
    implementation platform('com.google.firebase:firebase-bom:26.4.0')

    // Declare the dependencies for the Dynamic Links and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-dynamic-links'
    implementation 'com.google.firebase:firebase-analytics'
    // Required only if Facebook login and ads support is required. Find the latest Facebook SDK releases here: https://goo.gl/Ce5L94
    //implementation 'com.facebook.android:facebook-android-sdk:5.5.1'
}

play {
    jsonFile = file('keys.json')
    track = 'production'
    uploadImages = true
}

apply plugin: 'com.google.gms.google-services'